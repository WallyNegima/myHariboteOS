     1                                  ; naskfunc
     2                                  ; TAB=4
     3                                  
     4                                  ;[FORMAT "WCOFF"]				; オブジェクトファイルを作るモード ; NASMではエラーが出るのでこの行削除	
     5                                  ;[INSTRSET "i486p"]				; 486の命令まで使いたいという記述 ; NASMではエラーが出るのでこの行削除
     6                                  [BITS 32]						; 32ビットモード用の機械語を作らせる
     7                                  ;[FILE "naskfunc.nas"]			; ソースファイル名情報 ; NASMではエラーが出るのでこの行削除
     8                                  
     9                                  		; 以下、アンダーバー付き関数名からアンダーバー除いた関数名に修正する
    10                                  		; _io_hlt →　io_hlt など
    11                                  		GLOBAL	io_hlt, io_cli, io_sti, io_stihlt
    12                                  		GLOBAL	io_in8,  io_in16,  io_in32
    13                                  		GLOBAL	io_out8, io_out16, io_out32
    14                                  		GLOBAL	io_load_eflags, io_store_eflags
    15                                  		GLOBAL	load_gdtr, load_idtr
    16                                  		GLOBAL	load_cr0, store_cr0
    17                                  		GLOBAL	load_tr
    18                                  		GLOBAL	asm_inthandler20, asm_inthandler21, asm_inthandler27, asm_inthandler2c
    19                                  		GLOBAL	memtest_sub
    20                                  		GLOBAL	taskswitch3,taskswitch4
    21                                  		EXTERN	inthandler20, inthandler21
    22                                  		EXTERN  inthandler27, inthandler2c
    23                                  
    24                                  [SECTION .text]
    25                                  
    26                                  io_hlt:	; void io_hlt(void);
    27 00000000 F4                      		HLT
    28 00000001 C3                      		RET
    29                                  
    30                                  io_cli:	; void io_cli(void);
    31 00000002 FA                      		CLI
    32 00000003 C3                      		RET
    33                                  
    34                                  io_sti:	; void io_sti(void);
    35 00000004 FB                      		STI
    36 00000005 C3                      		RET
    37                                  
    38                                  io_stihlt:	; void io_stihlt(void);
    39 00000006 FB                      		STI
    40 00000007 F4                      		HLT
    41 00000008 C3                      		RET
    42                                  
    43                                  io_in8:	; int io_in8(int port);
    44 00000009 8B542404                		MOV		EDX,[ESP+4]		; port
    45 0000000D B800000000              		MOV		EAX,0
    46 00000012 EC                      		IN		AL,DX
    47 00000013 C3                      		RET
    48                                  
    49                                  io_in16:	; int io_in16(int port);
    50 00000014 8B542404                		MOV		EDX,[ESP+4]		; port
    51 00000018 B800000000              		MOV		EAX,0
    52 0000001D 66ED                    		IN		AX,DX
    53 0000001F C3                      		RET
    54                                  
    55                                  io_in32:	; int io_in32(int port);
    56 00000020 8B542404                		MOV		EDX,[ESP+4]		; port
    57 00000024 ED                      		IN		EAX,DX
    58 00000025 C3                      		RET
    59                                  
    60                                  io_out8:	; void io_out8(int port, int data);
    61 00000026 8B542404                		MOV		EDX,[ESP+4]		; port
    62 0000002A 8A442408                		MOV		AL,[ESP+8]		; data
    63 0000002E EE                      		OUT		DX,AL
    64 0000002F C3                      		RET
    65                                  
    66                                  io_out16:	; void io_out16(int port, int data);
    67 00000030 8B542404                		MOV		EDX,[ESP+4]		; port
    68 00000034 8B442408                		MOV		EAX,[ESP+8]		; data
    69 00000038 66EF                    		OUT		DX,AX
    70 0000003A C3                      		RET
    71                                  
    72                                  io_out32:	; void io_out32(int port, int data);
    73 0000003B 8B542404                		MOV		EDX,[ESP+4]		; port
    74 0000003F 8B442408                		MOV		EAX,[ESP+8]		; data
    75 00000043 EF                      		OUT		DX,EAX
    76 00000044 C3                      		RET
    77                                  
    78                                  io_load_eflags:	; int io_load_eflags(void);
    79 00000045 9C                      		PUSHFD		; PUSH EFLAGS という意味
    80 00000046 58                      		POP		EAX
    81 00000047 C3                      		RET
    82                                  
    83                                  io_store_eflags:	; void io_store_eflags(int eflags);
    84 00000048 8B442404                		MOV		EAX,[ESP+4]
    85 0000004C 50                      		PUSH	EAX
    86 0000004D 9D                      		POPFD		; POP EFLAGS という意味
    87 0000004E C3                      		RET
    88                                  
    89                                  load_gdtr:		; void load_gdtr(int limit, int addr);
    90 0000004F 668B442404              		MOV		AX,[ESP+4]		; limit
    91 00000054 6689442406              		MOV		[ESP+6],AX
    92 00000059 0F01542406              		LGDT	[ESP+6]
    93 0000005E C3                      		RET
    94                                  
    95                                  load_idtr:		; void load_idtr(int limit, int addr);
    96 0000005F 668B442404              		MOV		AX,[ESP+4]		; limit
    97 00000064 6689442406              		MOV		[ESP+6],AX
    98 00000069 0F015C2406              		LIDT	[ESP+6]
    99 0000006E C3                      		RET
   100                                  
   101                                  load_cr0:
   102 0000006F 0F20C0                  		MOV		EAX,CR0
   103 00000072 C3                      		RET
   104                                  
   105                                  store_cr0:
   106 00000073 8B442404                		MOV		EAX,[ESP+4]
   107 00000077 0F22C0                  		MOV		CR0,EAX
   108 0000007A C3                      		RET
   109                                  
   110                                  load_tr:
   111 0000007B 0F005C2404              		LTR		[ESP+4]
   112 00000080 C3                      		RET
   113                                  
   114                                  asm_inthandler20:
   115 00000081 06                      		PUSH	ES
   116 00000082 1E                      		PUSH	DS
   117 00000083 60                      		PUSHAD
   118 00000084 89E0                    		MOV		EAX,ESP
   119 00000086 50                      		PUSH	EAX
   120 00000087 668CD0                  		MOV		AX,SS
   121 0000008A 8ED8                    		MOV		DS,AX
   122 0000008C 8EC0                    		MOV		ES,AX
   123 0000008E E8(00000000)            		CALL	inthandler20
   124 00000093 58                      		POP		EAX
   125 00000094 61                      		POPAD
   126 00000095 1F                      		POP		DS
   127 00000096 07                      		POP		ES
   128 00000097 CF                      		IRETD
   129                                  
   130                                  asm_inthandler21:
   131 00000098 06                      		PUSH	ES
   132 00000099 1E                      		PUSH	DS
   133 0000009A 60                      		PUSHAD
   134 0000009B 89E0                    		MOV		EAX,ESP
   135 0000009D 50                      		PUSH	EAX
   136 0000009E 668CD0                  		MOV		AX,SS
   137 000000A1 8ED8                    		MOV		DS,AX
   138 000000A3 8EC0                    		MOV		ES,AX
   139 000000A5 E8(00000000)            		CALL	inthandler21
   140 000000AA 58                      		POP		EAX
   141 000000AB 61                      		POPAD
   142 000000AC 1F                      		POP		DS
   143 000000AD 07                      		POP		ES
   144 000000AE CF                      		IRETD
   145                                  
   146                                  asm_inthandler27:
   147 000000AF 06                      		PUSH	ES
   148 000000B0 1E                      		PUSH	DS
   149 000000B1 60                      		PUSHAD
   150 000000B2 89E0                    		MOV		EAX,ESP
   151 000000B4 50                      		PUSH	EAX
   152 000000B5 668CD0                  		MOV		AX,SS
   153 000000B8 8ED8                    		MOV		DS,AX
   154 000000BA 8EC0                    		MOV		ES,AX
   155 000000BC E8(00000000)            		CALL	inthandler27
   156 000000C1 58                      		POP		EAX
   157 000000C2 61                      		POPAD
   158 000000C3 1F                      		POP		DS
   159 000000C4 07                      		POP		ES
   160 000000C5 CF                      		IRETD
   161                                  
   162                                  asm_inthandler2c:
   163 000000C6 06                      		PUSH	ES
   164 000000C7 1E                      		PUSH	DS
   165 000000C8 60                      		PUSHAD
   166 000000C9 89E0                    		MOV		EAX,ESP
   167 000000CB 50                      		PUSH	EAX
   168 000000CC 668CD0                  		MOV		AX,SS
   169 000000CF 8ED8                    		MOV		DS,AX
   170 000000D1 8EC0                    		MOV		ES,AX
   171 000000D3 E8(00000000)            		CALL	inthandler2c
   172 000000D8 58                      		POP		EAX
   173 000000D9 61                      		POPAD
   174 000000DA 1F                      		POP		DS
   175 000000DB 07                      		POP		ES
   176 000000DC CF                      		IRETD
   177                                  
   178                                  memtest_sub:
   179 000000DD 57                      		PUSH		EDI
   180 000000DE 56                      		PUSH		ESI
   181 000000DF 53                      		PUSH		EBX
   182 000000E0 BE55AA55AA              		MOV			ESI, 0xaa55aa55
   183 000000E5 BFAA55AA55              		MOV			EDI, 0x55aa55aa
   184 000000EA 8B442410                		MOV			EAX,[ESP+12+4]
   185                                  
   186                                  mts_loop:
   187 000000EE 89C3                    		MOV		EBX,EAX
   188 000000F0 81C3FC0F0000            		ADD		EBX, 0xffc
   189 000000F6 8B13                    		MOV		EDX,[EBX]
   190 000000F8 8933                    		MOV		[EBX],ESI
   191 000000FA 8333FF                  		XOR		DWORD [EBX], 0xffffffff;
   192 000000FD 3B3B                    		CMP		EDI,[EBX]
   193 000000FF 7518                    		JNE		mts_fin
   194 00000101 8333FF                  		XOR		DWORD [EBX], 0xffffffff;
   195 00000104 3B33                    		CMP		ESI,[EBX]
   196 00000106 7511                    		JNE		mts_fin
   197 00000108 8913                    		MOV		[EBX],EDX
   198 0000010A 0500100000              		ADD		EAX,0x1000
   199 0000010F 3B442414                		CMP		EAX,[ESP+12+8]
   200 00000113 76D9                    		JBE		mts_loop
   201 00000115 5B                      		POP		EBX
   202 00000116 5E                      		POP		ESI
   203 00000117 5F                      		POP		EDI
   204 00000118 C3                      		RET
   205                                  
   206                                  mts_fin
   206          ******************       warning: label alone on a line without a colon might be in error [-w+label-orphan]
   207 00000119 8913                    		MOV		[EBX],EDX
   208 0000011B 5B                      		POP		EBX
   209 0000011C 5E                      		POP		ESI
   210 0000011D 5F                      		POP		EDI
   211 0000011E C3                      		RET
   212                                  
   213                                  taskswitch3:
   214 0000011F EA000000001800          		JMP		3*8:0
   215 00000126 C3                      		RET
   216                                  
   217                                  taskswitch4:
   218 00000127 EA000000002000          		JMP		4*8:0
   219 0000012E C3                      		RET
