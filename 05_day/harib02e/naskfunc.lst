     1                                  ; naskfunc
     2                                  ; TAB=4
     3                                  
     4                                  ;[FORMAT "WCOFF"]				; オブジェクトファイルを作るモード ; NASMではエラーが出るのでこの行削除	
     5                                  ;[INSTRSET "i486p"]				; 486の命令まで使いたいという記述 ; NASMではエラーが出るのでこの行削除
     6                                  [BITS 32]						; 32ビットモード用の機械語を作らせる
     7                                  ;[FILE "naskfunc.nas"]			; ソースファイル名情報 ; NASMではエラーが出るのでこの行削除
     8                                  
     9                                  		; 以下、アンダーバー付き関数名からアンダーバー除いた関数名に修正する
    10                                  		; _io_hlt →　io_hlt など
    11                                  		GLOBAL	io_hlt, io_cli, io_sti, io_stihlt
    12                                  		GLOBAL	io_in8,  io_in16,  io_in32
    13                                  		GLOBAL	io_out8, io_out16, io_out32
    14                                  		GLOBAL	io_load_eflags, io_store_eflags
    15                                  
    16                                  [SECTION .text]
    17                                  
    18                                  io_hlt:	; void io_hlt(void);
    19 00000000 F4                      		HLT
    20 00000001 C3                      		RET
    21                                  
    22                                  io_cli:	; void io_cli(void);
    23 00000002 FA                      		CLI
    24 00000003 C3                      		RET
    25                                  
    26                                  io_sti:	; void io_sti(void);
    27 00000004 FB                      		STI
    28 00000005 C3                      		RET
    29                                  
    30                                  io_stihlt:	; void io_stihlt(void);
    31 00000006 FB                      		STI
    32 00000007 F4                      		HLT
    33 00000008 C3                      		RET
    34                                  
    35                                  io_in8:	; int io_in8(int port);
    36 00000009 8B542404                		MOV		EDX,[ESP+4]		; port
    37 0000000D B800000000              		MOV		EAX,0
    38 00000012 EC                      		IN		AL,DX
    39 00000013 C3                      		RET
    40                                  
    41                                  io_in16:	; int io_in16(int port);
    42 00000014 8B542404                		MOV		EDX,[ESP+4]		; port
    43 00000018 B800000000              		MOV		EAX,0
    44 0000001D 66ED                    		IN		AX,DX
    45 0000001F C3                      		RET
    46                                  
    47                                  io_in32:	; int io_in32(int port);
    48 00000020 8B542404                		MOV		EDX,[ESP+4]		; port
    49 00000024 ED                      		IN		EAX,DX
    50 00000025 C3                      		RET
    51                                  
    52                                  io_out8:	; void io_out8(int port, int data);
    53 00000026 8B542404                		MOV		EDX,[ESP+4]		; port
    54 0000002A 8A442408                		MOV		AL,[ESP+8]		; data
    55 0000002E EE                      		OUT		DX,AL
    56 0000002F C3                      		RET
    57                                  
    58                                  io_out16:	; void io_out16(int port, int data);
    59 00000030 8B542404                		MOV		EDX,[ESP+4]		; port
    60 00000034 8B442408                		MOV		EAX,[ESP+8]		; data
    61 00000038 66EF                    		OUT		DX,AX
    62 0000003A C3                      		RET
    63                                  
    64                                  io_out32:	; void io_out32(int port, int data);
    65 0000003B 8B542404                		MOV		EDX,[ESP+4]		; port
    66 0000003F 8B442408                		MOV		EAX,[ESP+8]		; data
    67 00000043 EF                      		OUT		DX,EAX
    68 00000044 C3                      		RET
    69                                  
    70                                  io_load_eflags:	; int io_load_eflags(void);
    71 00000045 9C                      		PUSHFD		; PUSH EFLAGS という意味
    72 00000046 58                      		POP		EAX
    73 00000047 C3                      		RET
    74                                  
    75                                  io_store_eflags:	; void io_store_eflags(int eflags);
    76 00000048 8B442404                		MOV		EAX,[ESP+4]
    77 0000004C 50                      		PUSH	EAX
    78 0000004D 9D                      		POPFD		; POP EFLAGS という意味
    79 0000004E C3                      		RET
