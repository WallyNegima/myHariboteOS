     1                                  ; haribote-os boot asm
     2                                  ; TAB=4
     3                                  
     4                                  
     5                                  VBEMODE	EQU		0x105 ; 1024*768*8bit
     6                                  
     7                                  BOTPAK	EQU		0x00280000		; bootpackのロード先
     8                                  DSKCAC	EQU		0x00100000		; ディスクキャッシュの場所
     9                                  DSKCAC0	EQU		0x00008000		; ディスクキャッシュの場所（リアルモード）
    10                                  
    11                                  ; BOOT_INFO関係
    12                                  CYLS	EQU		0x0ff0			; ブートセクタが設定する
    13                                  LEDS	EQU		0x0ff1
    14                                  VMODE	EQU		0x0ff2			; 色数に関する情報。何ビットカラーか？
    15                                  SCRNX	EQU		0x0ff4			; 解像度のX
    16                                  SCRNY	EQU		0x0ff6			; 解像度のY
    17                                  VRAM	EQU		0x0ff8			; グラフィックバッファの開始番地
    18                                  
    19                                  		ORG		0xc200			; このプログラムがどこに読み込まれるのか
    20                                  
    21                                  ; VBEの生存確認
    22 00000000 B80090                  		MOV		AX,0x9000
    23 00000003 8EC0                    		MOV		ES,AX
    24 00000005 BF0000                  		MOV		DI,0
    25 00000008 B8004F                  		MOV		AX,0x4f00
    26 0000000B CD10                    		INT		0x10
    27 0000000D 83F84F                  		CMP		AX,0x004f
    28 00000010 7552                    		JNE		scrn320
    29                                  
    30                                  ; VBEのバージョン確認
    31 00000012 268B4504                		MOV		AX,[ES:DI+4]
    32 00000016 3D0002                  		CMP		AX,0x0200
    33 00000019 7249                    		JB		scrn320 ; if ax < 0x0200
    34                                  ; 画面モードの情報を得る
    35 0000001B B90501                  		MOV		CX,VBEMODE
    36 0000001E B8014F                  		MOV		AX,0x4f01
    37 00000021 CD10                    		INT		0x10
    38 00000023 83F84F                  		CMP		AX,0x004f
    39 00000026 753C                    		JNE		scrn320
    40                                  ; 画面モードの確認
    41 00000028 26807D1908              		CMP		BYTE [ES:DI+0x19],8 ; 色数は8か？
    42 0000002D 7535                    		JNE		scrn320
    43 0000002F 26807D1B04              		CMP		BYTE [ES:DI+0x1b],4 ; 色の指定方法はパレットモードの4か？
    44 00000034 752E                    		JNE		scrn320
    45 00000036 268B05                  		MOV		AX,[ES:DI+0x00] ; モード属性
    46 00000039 258000                  		AND		AX,0x0080
    47 0000003C 7426                    		JZ		scrn320
    48                                  ; 画面モードを設定
    49 0000003E BB0541                  		MOV		BX,VBEMODE+0x4000
    50 00000041 B8024F                  		MOV		AX,0x4f02
    51 00000044 CD10                    		INT		0x10
    52 00000046 C606F20F08              		MOV		BYTE [VMODE],8	; 画面モードをメモする（C言語が参照する）
    53 0000004B 268B4512                		MOV		AX,[ES:DI+0x12]
    54 0000004F A3F40F                  		MOV		[SCRNX],AX
    55 00000052 268B4514                		MOV		AX,[ES:DI+0x14]
    56 00000056 A3F60F                  		MOV		[SCRNY],AX
    57 00000059 26668B4528              		MOV		EAX,[ES:DI+0x28]
    58 0000005E 66A3F80F                		MOV		DWORD [VRAM],EAX
    59 00000062 EB20                    		JMP		keystatus
    60                                  
    61                                  scrn320:
    62 00000064 B013                    		MOV		AL,0x13
    63 00000066 B400                    		MOV		AH,0x00
    64 00000068 CD10                    		INT		0x10
    65 0000006A C606F20F08              		MOV 	BYTE [VMODE],8
    66 0000006F C706F40F4001            		MOV		WORD [SCRNX],320
    67 00000075 C706F60FC800            		MOV		WORD [SCRNY],200
    68 0000007B 66C706F80F00000A00      		MOV		DWORD [VRAM],0x000a0000
    69                                  
    70                                  ; キーボードのLED状態をBIOSに教えてもらう
    71                                  keystatus:
    72 00000084 B402                    		MOV		AH,0x02
    73 00000086 CD16                    		INT		0x16 			; keyboard BIOS
    74 00000088 A2F10F                  		MOV		[LEDS],AL
    75                                  
    76                                  ; PICが一切の割り込みを受け付けないようにする
    77                                  ;	AT互換機の仕様では、PICの初期化をするなら、
    78                                  ;	こいつをCLI前にやっておかないと、たまにハングアップする
    79                                  ;	PICの初期化はあとでやる
    80                                  
    81 0000008B B0FF                    		MOV		AL,0xff
    82 0000008D E621                    		OUT		0x21,AL
    83 0000008F 90                      		NOP						; OUT命令を連続させるとうまくいかない機種があるらしいので
    84 00000090 E6A1                    		OUT		0xa1,AL
    85                                  
    86 00000092 FA                      		CLI						; さらにCPUレベルでも割り込み禁止
    87                                  
    88                                  ; CPUから1MB以上のメモリにアクセスできるように、A20GATEを設定
    89                                  
    90 00000093 E8B500                  		CALL	waitkbdout
    91 00000096 B0D1                    		MOV		AL,0xd1
    92 00000098 E664                    		OUT		0x64,AL
    93 0000009A E8AE00                  		CALL	waitkbdout
    94 0000009D B0DF                    		MOV		AL,0xdf			; enable A20
    95 0000009F E660                    		OUT		0x60,AL
    96 000000A1 E8A700                  		CALL	waitkbdout
    97                                  
    98                                  ; プロテクトモード移行
    99                                  
   100                                  ;[INSTRSET "i486p"]				; 486の命令まで使いたいという記述 ; NASMではエラーが出るのでこの行削除
   101                                  
   102 000000A4 0F0116[8A01]            		LGDT	[GDTR0]			; 暫定GDTを設定
   103 000000A9 0F20C0                  		MOV		EAX,CR0
   104 000000AC 6625FFFFFF7F            		AND		EAX,0x7fffffff	; bit31を0にする（ページング禁止のため）
   105 000000B2 6683C801                		OR		EAX,0x00000001	; bit0を1にする（プロテクトモード移行のため）
   106 000000B6 0F22C0                  		MOV		CR0,EAX
   107 000000B9 EB00                    		JMP		pipelineflush
   108                                  pipelineflush:
   109 000000BB B80800                  		MOV		AX,1*8			;  読み書き可能セグメント32bit
   110 000000BE 8ED8                    		MOV		DS,AX
   111 000000C0 8EC0                    		MOV		ES,AX
   112 000000C2 8EE0                    		MOV		FS,AX
   113 000000C4 8EE8                    		MOV		GS,AX
   114 000000C6 8ED0                    		MOV		SS,AX
   115                                  
   116                                  ; bootpackの転送
   117                                  
   118 000000C8 66BE[90010000]          		MOV		ESI,bootpack	; 転送元
   119 000000CE 66BF00002800            		MOV		EDI,BOTPAK		; 転送先
   120 000000D4 66B900000200            		MOV		ECX,512*1024/4
   121 000000DA E87500                  		CALL	memcpy
   122                                  
   123                                  ; ついでにディスクデータも本来の位置へ転送
   124                                  
   125                                  ; まずはブートセクタから
   126                                  
   127 000000DD 66BE007C0000            		MOV		ESI,0x7c00		; 転送元
   128 000000E3 66BF00001000            		MOV		EDI,DSKCAC		; 転送先
   129 000000E9 66B980000000            		MOV		ECX,512/4
   130 000000EF E86000                  		CALL	memcpy
   131                                  
   132                                  ; 残り全部
   133                                  
   134 000000F2 66BE00820000            		MOV		ESI,DSKCAC0+512	; 転送元
   135 000000F8 66BF00021000            		MOV		EDI,DSKCAC+512	; 転送先
   136 000000FE 66B900000000            		MOV		ECX,0
   137 00000104 8A0EF00F                		MOV		CL,BYTE [CYLS]
   138 00000108 6669C900120000          		IMUL	ECX,512*18*2/4	; シリンダ数からバイト数/4に変換
   139 0000010F 6681E980000000          		SUB		ECX,512/4		; IPLの分だけ差し引く
   140 00000116 E83900                  		CALL	memcpy
   141                                  
   142                                  ; asmheadでしなければいけないことは全部し終わったので、
   143                                  ;	あとはbootpackに任せる
   144                                  
   145                                  ; bootpackの起動
   146                                  
   147 00000119 66BB00002800            		MOV		EBX,BOTPAK
   148 0000011F 66678B4B10              		MOV		ECX,[EBX+16]
   149 00000124 6683C103                		ADD		ECX,3			; ECX += 3;
   150 00000128 66C1E902                		SHR		ECX,2			; ECX /= 4;
   151 0000012C 7410                    		JZ		skip			; 転送するべきものがない
   152 0000012E 66678B7314              		MOV		ESI,[EBX+20]	; 転送元
   153 00000133 6601DE                  		ADD		ESI,EBX
   154 00000136 66678B7B0C              		MOV		EDI,[EBX+12]	; 転送先
   155 0000013B E81400                  		CALL	memcpy
   156                                  skip:
   157 0000013E 66678B630C              		MOV		ESP,[EBX+12]	; スタック初期値
   158 00000143 66EA1B0000001000        		JMP		DWORD 2*8:0x0000001b
   159                                  
   160                                  waitkbdout:
   161 0000014B E464                    		IN		 AL,0x64
   162 0000014D 2402                    		AND		 AL,0x02
   163 0000014F 75FA                    		JNZ		waitkbdout		; ANDの結果が0でなければwaitkbdoutへ
   164 00000151 C3                      		RET
   165                                  
   166                                  memcpy:
   167 00000152 66678B06                		MOV		EAX,[ESI]
   168 00000156 6683C604                		ADD		ESI,4
   169 0000015A 66678907                		MOV		[EDI],EAX
   170 0000015E 6683C704                		ADD		EDI,4
   171 00000162 6683E901                		SUB		ECX,1
   172 00000166 75EA                    		JNZ		memcpy			; 引き算した結果が0でなければmemcpyへ
   173 00000168 C3                      		RET
   174                                  ; memcpyはアドレスサイズプリフィクスを入れ忘れなければ、ストリング命令でも書ける
   175                                  
   176                                  		;ALIGNB	16
   177 00000169 00<rep 7h>              		ALIGNB	16, DB 0	; NASMでは警告が出るので修正
   178                                  GDT0:
   179                                  		;RESB	8				; ヌルセレクタ
   180 00000170 00<rep 8h>              		TIMES	8 DB 0		; NASMでは警告が出るので修正
   181 00000178 FFFF00000092CF00        		DW		0xffff,0x0000,0x9200,0x00cf	; 読み書き可能セグメント32bit
   182 00000180 FFFF0000289A4700        		DW		0xffff,0x0000,0x9a28,0x0047	; 実行可能セグメント32bit（bootpack用）
   183                                  
   184 00000188 0000                    		DW		0
   185                                  GDTR0:
   186 0000018A 1700                    		DW		8*3-1
   187 0000018C [70010000]              		DD		GDT0
   188                                  
   189                                  		;ALIGNB	16
   190                                  		ALIGNB	16, DB 0	; NASMでは警告が出るので修正
   191                                  bootpack:
