     1                                  ; naskfunc
     2                                  ; TAB=4
     3                                  
     4                                  ;[FORMAT "WCOFF"]				; オブジェクトファイルを作るモード ; NASMではエラーが出るのでこの行削除	
     5                                  ;[INSTRSET "i486p"]				; 486の命令まで使いたいという記述 ; NASMではエラーが出るのでこの行削除
     6                                  [BITS 32]						; 32ビットモード用の機械語を作らせる
     7                                  ;[FILE "naskfunc.nas"]			; ソースファイル名情報 ; NASMではエラーが出るのでこの行削除
     8                                  
     9                                  		; 以下、アンダーバー付き関数名からアンダーバー除いた関数名に修正する
    10                                  		; _io_hlt →　io_hlt など
    11                                  		GLOBAL	io_hlt, io_cli, io_sti, io_stihlt
    12                                  		GLOBAL	io_in8,  io_in16,  io_in32
    13                                  		GLOBAL	io_out8, io_out16, io_out32
    14                                  		GLOBAL	io_load_eflags, io_store_eflags
    15                                  		GLOBAL	load_gdtr, load_idtr
    16                                  		GLOBAL	load_cr0, store_cr0
    17                                  		GLOBAL	asm_inthandler21, asm_inthandler27, asm_inthandler2c
    18                                  		EXTERN	inthandler21, inthandler27, inthandler2c
    19                                  
    20                                  [SECTION .text]
    21                                  
    22                                  io_hlt:	; void io_hlt(void);
    23 00000000 F4                      		HLT
    24 00000001 C3                      		RET
    25                                  
    26                                  io_cli:	; void io_cli(void);
    27 00000002 FA                      		CLI
    28 00000003 C3                      		RET
    29                                  
    30                                  io_sti:	; void io_sti(void);
    31 00000004 FB                      		STI
    32 00000005 C3                      		RET
    33                                  
    34                                  io_stihlt:	; void io_stihlt(void);
    35 00000006 FB                      		STI
    36 00000007 F4                      		HLT
    37 00000008 C3                      		RET
    38                                  
    39                                  io_in8:	; int io_in8(int port);
    40 00000009 8B542404                		MOV		EDX,[ESP+4]		; port
    41 0000000D B800000000              		MOV		EAX,0
    42 00000012 EC                      		IN		AL,DX
    43 00000013 C3                      		RET
    44                                  
    45                                  io_in16:	; int io_in16(int port);
    46 00000014 8B542404                		MOV		EDX,[ESP+4]		; port
    47 00000018 B800000000              		MOV		EAX,0
    48 0000001D 66ED                    		IN		AX,DX
    49 0000001F C3                      		RET
    50                                  
    51                                  io_in32:	; int io_in32(int port);
    52 00000020 8B542404                		MOV		EDX,[ESP+4]		; port
    53 00000024 ED                      		IN		EAX,DX
    54 00000025 C3                      		RET
    55                                  
    56                                  io_out8:	; void io_out8(int port, int data);
    57 00000026 8B542404                		MOV		EDX,[ESP+4]		; port
    58 0000002A 8A442408                		MOV		AL,[ESP+8]		; data
    59 0000002E EE                      		OUT		DX,AL
    60 0000002F C3                      		RET
    61                                  
    62                                  io_out16:	; void io_out16(int port, int data);
    63 00000030 8B542404                		MOV		EDX,[ESP+4]		; port
    64 00000034 8B442408                		MOV		EAX,[ESP+8]		; data
    65 00000038 66EF                    		OUT		DX,AX
    66 0000003A C3                      		RET
    67                                  
    68                                  io_out32:	; void io_out32(int port, int data);
    69 0000003B 8B542404                		MOV		EDX,[ESP+4]		; port
    70 0000003F 8B442408                		MOV		EAX,[ESP+8]		; data
    71 00000043 EF                      		OUT		DX,EAX
    72 00000044 C3                      		RET
    73                                  
    74                                  io_load_eflags:	; int io_load_eflags(void);
    75 00000045 9C                      		PUSHFD		; PUSH EFLAGS という意味
    76 00000046 58                      		POP		EAX
    77 00000047 C3                      		RET
    78                                  
    79                                  io_store_eflags:	; void io_store_eflags(int eflags);
    80 00000048 8B442404                		MOV		EAX,[ESP+4]
    81 0000004C 50                      		PUSH	EAX
    82 0000004D 9D                      		POPFD		; POP EFLAGS という意味
    83 0000004E C3                      		RET
    84                                  
    85                                  load_gdtr:		; void load_gdtr(int limit, int addr);
    86 0000004F 668B442404              		MOV		AX,[ESP+4]		; limit
    87 00000054 6689442406              		MOV		[ESP+6],AX
    88 00000059 0F01542406              		LGDT	[ESP+6]
    89 0000005E C3                      		RET
    90                                  
    91                                  load_idtr:		; void load_idtr(int limit, int addr);
    92 0000005F 668B442404              		MOV		AX,[ESP+4]		; limit
    93 00000064 6689442406              		MOV		[ESP+6],AX
    94 00000069 0F015C2406              		LIDT	[ESP+6]
    95 0000006E C3                      		RET
    96                                  
    97                                  load_cr0:
    98 0000006F 0F20C0                  		MOV		EAX,CR0
    99 00000072 C3                      		RET
   100                                  
   101                                  store_cr0:
   102 00000073 8B442404                		MOV		EAX,[ESP+4]
   103 00000077 0F22C0                  		MOV		CR0,EAX
   104 0000007A C3                      		RET
   105                                  
   106                                  asm_inthandler21:
   107 0000007B 06                      		PUSH	ES
   108 0000007C 1E                      		PUSH	DS
   109 0000007D 60                      		PUSHAD
   110 0000007E 89E0                    		MOV		EAX,ESP
   111 00000080 50                      		PUSH	EAX
   112 00000081 668CD0                  		MOV		AX,SS
   113 00000084 8ED8                    		MOV		DS,AX
   114 00000086 8EC0                    		MOV		ES,AX
   115 00000088 E8(00000000)            		CALL	inthandler21
   116 0000008D 58                      		POP		EAX
   117 0000008E 61                      		POPAD
   118 0000008F 1F                      		POP		DS
   119 00000090 07                      		POP		ES
   120 00000091 CF                      		IRETD
   121                                  
   122                                  asm_inthandler27:
   123 00000092 06                      		PUSH	ES
   124 00000093 1E                      		PUSH	DS
   125 00000094 60                      		PUSHAD
   126 00000095 89E0                    		MOV		EAX,ESP
   127 00000097 50                      		PUSH	EAX
   128 00000098 668CD0                  		MOV		AX,SS
   129 0000009B 8ED8                    		MOV		DS,AX
   130 0000009D 8EC0                    		MOV		ES,AX
   131 0000009F E8(00000000)            		CALL	inthandler27
   132 000000A4 58                      		POP		EAX
   133 000000A5 61                      		POPAD
   134 000000A6 1F                      		POP		DS
   135 000000A7 07                      		POP		ES
   136 000000A8 CF                      		IRETD
   137                                  
   138                                  asm_inthandler2c:
   139 000000A9 06                      		PUSH	ES
   140 000000AA 1E                      		PUSH	DS
   141 000000AB 60                      		PUSHAD
   142 000000AC 89E0                    		MOV		EAX,ESP
   143 000000AE 50                      		PUSH	EAX
   144 000000AF 668CD0                  		MOV		AX,SS
   145 000000B2 8ED8                    		MOV		DS,AX
   146 000000B4 8EC0                    		MOV		ES,AX
   147 000000B6 E8(00000000)            		CALL	inthandler2c
   148 000000BB 58                      		POP		EAX
   149 000000BC 61                      		POPAD
   150 000000BD 1F                      		POP		DS
   151 000000BE 07                      		POP		ES
   152 000000BF CF                      		IRETD
