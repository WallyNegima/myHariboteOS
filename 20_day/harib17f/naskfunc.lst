     1                                  ; naskfunc
     2                                  ; TAB=4
     3                                  
     4                                  ;[FORMAT "WCOFF"]				; オブジェクトファイルを作るモード ; NASMではエラーが出るのでこの行削除	
     5                                  ;[INSTRSET "i486p"]				; 486の命令まで使いたいという記述 ; NASMではエラーが出るのでこの行削除
     6                                  [BITS 32]						; 32ビットモード用の機械語を作らせる
     7                                  ;[FILE "naskfunc.nas"]			; ソースファイル名情報 ; NASMではエラーが出るのでこの行削除
     8                                  
     9                                  		; 以下、アンダーバー付き関数名からアンダーバー除いた関数名に修正する
    10                                  		; _io_hlt →　io_hlt など
    11                                  		GLOBAL	io_hlt, io_cli, io_sti, io_stihlt
    12                                  		GLOBAL	io_in8,  io_in16,  io_in32
    13                                  		GLOBAL	io_out8, io_out16, io_out32
    14                                  		GLOBAL	io_load_eflags, io_store_eflags
    15                                  		GLOBAL	load_gdtr, load_idtr
    16                                  		GLOBAL	load_cr0, store_cr0
    17                                  		GLOBAL	load_tr
    18                                  		GLOBAL	asm_inthandler20, asm_inthandler21, asm_inthandler27, asm_inthandler2c
    19                                  		GLOBAL	memtest_sub
    20                                  		GLOBAL	farjmp
    21                                  		GLOBAL	asm_hrb_api
    22                                  		GLOBAL	farcall
    23                                  		EXTERN	inthandler20, inthandler21
    24                                  		EXTERN  inthandler27, inthandler2c
    25                                  		EXTERN	hrb_api
    26                                  
    27                                  [SECTION .text]
    28                                  
    29                                  io_hlt:	; void io_hlt(void);
    30 00000000 F4                      		HLT
    31 00000001 C3                      		RET
    32                                  
    33                                  io_cli:	; void io_cli(void);
    34 00000002 FA                      		CLI
    35 00000003 C3                      		RET
    36                                  
    37                                  io_sti:	; void io_sti(void);
    38 00000004 FB                      		STI
    39 00000005 C3                      		RET
    40                                  
    41                                  io_stihlt:	; void io_stihlt(void);
    42 00000006 FB                      		STI
    43 00000007 F4                      		HLT
    44 00000008 C3                      		RET
    45                                  
    46                                  io_in8:	; int io_in8(int port);
    47 00000009 8B542404                		MOV		EDX,[ESP+4]		; port
    48 0000000D B800000000              		MOV		EAX,0
    49 00000012 EC                      		IN		AL,DX
    50 00000013 C3                      		RET
    51                                  
    52                                  io_in16:	; int io_in16(int port);
    53 00000014 8B542404                		MOV		EDX,[ESP+4]		; port
    54 00000018 B800000000              		MOV		EAX,0
    55 0000001D 66ED                    		IN		AX,DX
    56 0000001F C3                      		RET
    57                                  
    58                                  io_in32:	; int io_in32(int port);
    59 00000020 8B542404                		MOV		EDX,[ESP+4]		; port
    60 00000024 ED                      		IN		EAX,DX
    61 00000025 C3                      		RET
    62                                  
    63                                  io_out8:	; void io_out8(int port, int data);
    64 00000026 8B542404                		MOV		EDX,[ESP+4]		; port
    65 0000002A 8A442408                		MOV		AL,[ESP+8]		; data
    66 0000002E EE                      		OUT		DX,AL
    67 0000002F C3                      		RET
    68                                  
    69                                  io_out16:	; void io_out16(int port, int data);
    70 00000030 8B542404                		MOV		EDX,[ESP+4]		; port
    71 00000034 8B442408                		MOV		EAX,[ESP+8]		; data
    72 00000038 66EF                    		OUT		DX,AX
    73 0000003A C3                      		RET
    74                                  
    75                                  io_out32:	; void io_out32(int port, int data);
    76 0000003B 8B542404                		MOV		EDX,[ESP+4]		; port
    77 0000003F 8B442408                		MOV		EAX,[ESP+8]		; data
    78 00000043 EF                      		OUT		DX,EAX
    79 00000044 C3                      		RET
    80                                  
    81                                  io_load_eflags:	; int io_load_eflags(void);
    82 00000045 9C                      		PUSHFD		; PUSH EFLAGS という意味
    83 00000046 58                      		POP		EAX
    84 00000047 C3                      		RET
    85                                  
    86                                  io_store_eflags:	; void io_store_eflags(int eflags);
    87 00000048 8B442404                		MOV		EAX,[ESP+4]
    88 0000004C 50                      		PUSH	EAX
    89 0000004D 9D                      		POPFD		; POP EFLAGS という意味
    90 0000004E C3                      		RET
    91                                  
    92                                  load_gdtr:		; void load_gdtr(int limit, int addr);
    93 0000004F 668B442404              		MOV		AX,[ESP+4]		; limit
    94 00000054 6689442406              		MOV		[ESP+6],AX
    95 00000059 0F01542406              		LGDT	[ESP+6]
    96 0000005E C3                      		RET
    97                                  
    98                                  load_idtr:		; void load_idtr(int limit, int addr);
    99 0000005F 668B442404              		MOV		AX,[ESP+4]		; limit
   100 00000064 6689442406              		MOV		[ESP+6],AX
   101 00000069 0F015C2406              		LIDT	[ESP+6]
   102 0000006E C3                      		RET
   103                                  
   104                                  load_cr0:
   105 0000006F 0F20C0                  		MOV		EAX,CR0
   106 00000072 C3                      		RET
   107                                  
   108                                  store_cr0:
   109 00000073 8B442404                		MOV		EAX,[ESP+4]
   110 00000077 0F22C0                  		MOV		CR0,EAX
   111 0000007A C3                      		RET
   112                                  
   113                                  load_tr:
   114 0000007B 0F005C2404              		LTR		[ESP+4]
   115 00000080 C3                      		RET
   116                                  
   117                                  asm_inthandler20:
   118 00000081 06                      		PUSH	ES
   119 00000082 1E                      		PUSH	DS
   120 00000083 60                      		PUSHAD
   121 00000084 89E0                    		MOV		EAX,ESP
   122 00000086 50                      		PUSH	EAX
   123 00000087 668CD0                  		MOV		AX,SS
   124 0000008A 8ED8                    		MOV		DS,AX
   125 0000008C 8EC0                    		MOV		ES,AX
   126 0000008E E8(00000000)            		CALL	inthandler20
   127 00000093 58                      		POP		EAX
   128 00000094 61                      		POPAD
   129 00000095 1F                      		POP		DS
   130 00000096 07                      		POP		ES
   131 00000097 CF                      		IRETD
   132                                  
   133                                  asm_inthandler21:
   134 00000098 06                      		PUSH	ES
   135 00000099 1E                      		PUSH	DS
   136 0000009A 60                      		PUSHAD
   137 0000009B 89E0                    		MOV		EAX,ESP
   138 0000009D 50                      		PUSH	EAX
   139 0000009E 668CD0                  		MOV		AX,SS
   140 000000A1 8ED8                    		MOV		DS,AX
   141 000000A3 8EC0                    		MOV		ES,AX
   142 000000A5 E8(00000000)            		CALL	inthandler21
   143 000000AA 58                      		POP		EAX
   144 000000AB 61                      		POPAD
   145 000000AC 1F                      		POP		DS
   146 000000AD 07                      		POP		ES
   147 000000AE CF                      		IRETD
   148                                  
   149                                  asm_inthandler27:
   150 000000AF 06                      		PUSH	ES
   151 000000B0 1E                      		PUSH	DS
   152 000000B1 60                      		PUSHAD
   153 000000B2 89E0                    		MOV		EAX,ESP
   154 000000B4 50                      		PUSH	EAX
   155 000000B5 668CD0                  		MOV		AX,SS
   156 000000B8 8ED8                    		MOV		DS,AX
   157 000000BA 8EC0                    		MOV		ES,AX
   158 000000BC E8(00000000)            		CALL	inthandler27
   159 000000C1 58                      		POP		EAX
   160 000000C2 61                      		POPAD
   161 000000C3 1F                      		POP		DS
   162 000000C4 07                      		POP		ES
   163 000000C5 CF                      		IRETD
   164                                  
   165                                  asm_inthandler2c:
   166 000000C6 06                      		PUSH	ES
   167 000000C7 1E                      		PUSH	DS
   168 000000C8 60                      		PUSHAD
   169 000000C9 89E0                    		MOV		EAX,ESP
   170 000000CB 50                      		PUSH	EAX
   171 000000CC 668CD0                  		MOV		AX,SS
   172 000000CF 8ED8                    		MOV		DS,AX
   173 000000D1 8EC0                    		MOV		ES,AX
   174 000000D3 E8(00000000)            		CALL	inthandler2c
   175 000000D8 58                      		POP		EAX
   176 000000D9 61                      		POPAD
   177 000000DA 1F                      		POP		DS
   178 000000DB 07                      		POP		ES
   179 000000DC CF                      		IRETD
   180                                  
   181                                  memtest_sub:
   182 000000DD 57                      		PUSH		EDI
   183 000000DE 56                      		PUSH		ESI
   184 000000DF 53                      		PUSH		EBX
   185 000000E0 BE55AA55AA              		MOV			ESI, 0xaa55aa55
   186 000000E5 BFAA55AA55              		MOV			EDI, 0x55aa55aa
   187 000000EA 8B442410                		MOV			EAX,[ESP+12+4]
   188                                  
   189                                  mts_loop:
   190 000000EE 89C3                    		MOV		EBX,EAX
   191 000000F0 81C3FC0F0000            		ADD		EBX, 0xffc
   192 000000F6 8B13                    		MOV		EDX,[EBX]
   193 000000F8 8933                    		MOV		[EBX],ESI
   194 000000FA 8333FF                  		XOR		DWORD [EBX], 0xffffffff;
   195 000000FD 3B3B                    		CMP		EDI,[EBX]
   196 000000FF 7518                    		JNE		mts_fin
   197 00000101 8333FF                  		XOR		DWORD [EBX], 0xffffffff;
   198 00000104 3B33                    		CMP		ESI,[EBX]
   199 00000106 7511                    		JNE		mts_fin
   200 00000108 8913                    		MOV		[EBX],EDX
   201 0000010A 0500100000              		ADD		EAX,0x1000
   202 0000010F 3B442414                		CMP		EAX,[ESP+12+8]
   203 00000113 76D9                    		JBE		mts_loop
   204 00000115 5B                      		POP		EBX
   205 00000116 5E                      		POP		ESI
   206 00000117 5F                      		POP		EDI
   207 00000118 C3                      		RET
   208                                  
   209                                  mts_fin
   209          ******************       warning: label alone on a line without a colon might be in error [-w+label-orphan]
   210 00000119 8913                    		MOV		[EBX],EDX
   211 0000011B 5B                      		POP		EBX
   212 0000011C 5E                      		POP		ESI
   213 0000011D 5F                      		POP		EDI
   214 0000011E C3                      		RET
   215                                  
   216                                  farjmp:
   217 0000011F FF6C2404                		JMP		FAR		[ESP+4]
   218 00000123 C3                      		RET
   219                                  
   220                                  farcall:
   221 00000124 FF5C2404                		CALL	FAR [ESP+4]
   222 00000128 C3                      		RET
   223                                  
   224                                  asm_hrb_api:
   225 00000129 FB                      		STI
   226 0000012A 60                      		PUSHAD
   227 0000012B 60                      		PUSHAD
   228 0000012C E8(00000000)            		CALL	hrb_api
   229 00000131 83C420                  		ADD		ESP,32
   230 00000134 61                      		POPAD
   231 00000135 CF                      		IRETD
